//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: WeakRefDemo.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "WeakRefDemo.h"
#include "java/io/PrintStream.h"
#include "java/lang/System.h"
#include "java/lang/ref/WeakReference.h"

@interface WeakRefDemo_Demo () {
 @public
  NSString *value_;
}

@end

J2OBJC_FIELD_SETTER(WeakRefDemo_Demo, value_, NSString *)

@implementation WeakRefDemo

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  WeakRefDemo_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)mainWithNSStringArray:(IOSObjectArray *)args {
  WeakRefDemo_mainWithNSStringArray_(args);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(mainWithNSStringArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "main", "[LNSString;", "LWeakRefDemo_Demo;" };
  static const J2ObjcClassInfo _WeakRefDemo = { "WeakRefDemo", NULL, ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, 2, -1, -1, -1 };
  return &_WeakRefDemo;
}

@end

void WeakRefDemo_init(WeakRefDemo *self) {
  NSObject_init(self);
}

WeakRefDemo *new_WeakRefDemo_init() {
  J2OBJC_NEW_IMPL(WeakRefDemo, init)
}

WeakRefDemo *create_WeakRefDemo_init() {
  J2OBJC_CREATE_IMPL(WeakRefDemo, init)
}

void WeakRefDemo_mainWithNSStringArray_(IOSObjectArray *args) {
  WeakRefDemo_initialize();
  WeakRefDemo *weakRefDemo = new_WeakRefDemo_init();
  WeakRefDemo_Demo *demo = new_WeakRefDemo_Demo_initWithWeakRefDemo_withNSString_(weakRefDemo, @"Hello WeakRef");
  JavaLangRefWeakReference *wr = new_JavaLangRefWeakReference_initWithId_(demo);
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:[((WeakRefDemo_Demo *) nil_chk([wr get])) description]];
  demo = nil;
  [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:[((WeakRefDemo_Demo *) nil_chk([wr get])) description]];
  JavaLangSystem_gc();
  [JreLoadStatic(JavaLangSystem, out) printlnWithId:[wr get]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(WeakRefDemo)

@implementation WeakRefDemo_Demo

- (instancetype)initWithWeakRefDemo:(WeakRefDemo *)outer$
                       withNSString:(NSString *)value {
  WeakRefDemo_Demo_initWithWeakRefDemo_withNSString_(self, outer$, value);
  return self;
}

- (NSString *)description {
  return self->value_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithWeakRefDemo:withNSString:);
  methods[1].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "value_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "toString", "LWeakRefDemo;" };
  static const J2ObjcClassInfo _WeakRefDemo_Demo = { "Demo", NULL, ptrTable, methods, fields, 7, 0x0, 2, 1, 2, -1, -1, -1, -1 };
  return &_WeakRefDemo_Demo;
}

@end

void WeakRefDemo_Demo_initWithWeakRefDemo_withNSString_(WeakRefDemo_Demo *self, WeakRefDemo *outer$, NSString *value) {
  NSObject_init(self);
  self->value_ = value;
}

WeakRefDemo_Demo *new_WeakRefDemo_Demo_initWithWeakRefDemo_withNSString_(WeakRefDemo *outer$, NSString *value) {
  J2OBJC_NEW_IMPL(WeakRefDemo_Demo, initWithWeakRefDemo_withNSString_, outer$, value)
}

WeakRefDemo_Demo *create_WeakRefDemo_Demo_initWithWeakRefDemo_withNSString_(WeakRefDemo *outer$, NSString *value) {
  J2OBJC_CREATE_IMPL(WeakRefDemo_Demo, initWithWeakRefDemo_withNSString_, outer$, value)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(WeakRefDemo_Demo)
